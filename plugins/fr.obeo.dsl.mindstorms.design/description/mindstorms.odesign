<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="mindstorms" version="10.1.0.201507271600">
  <ownedViewpoints name="MindstormsViewpoint" label="Mindstorms" modelFileExtension="*.mindstorms">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="MindstormsDiagram" label="Mindstorms" titleExpression="aql:'Mindstorms Diagram'" domainClass="mindstorms.Main" enablePopupBars="true">
      <metamodel href="http://www.obeo.fr/dsl/mindstorms/1.0.0#/"/>
      <defaultLayer name="MindstormsDiagramDefaultLayer" label="Default">
        <nodeMappings name="MN_Delay" label="Node Delay" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDE_Delay']" semanticCandidatesExpression="aql:self.instructions" domainClass="mindstorms.Delay">
          <style xsi:type="style:DotDescription" labelSize="10" labelExpression="aql:'Delay of ' + self.ms + ' ms'" tooltipExpression="aql:'Delay of ' + self.ms + ' ms'" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="MN_GoBackward" label="Node GoBackward" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" semanticCandidatesExpression="aql:self.instructions" domainClass="mindstorms.GoBackward">
          <style xsi:type="style:DotDescription" labelSize="10" labelExpression="aql:'Go Backward'" tooltipExpression="aql:'Go Backward'" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="MN_GoForward" label="Node GoForward" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" semanticCandidatesExpression="aql:self.instructions" domainClass="mindstorms.GoForward">
          <style xsi:type="style:DotDescription" labelSize="10" labelExpression="aql:'Go Forward'" tooltipExpression="aql:'Go Forward'" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="MN_GoTo" label="Node GoTo" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDE_Goto']" semanticCandidatesExpression="aql:self.instructions" domainClass="mindstorms.GoTo">
          <style xsi:type="style:DotDescription" labelSize="10" labelExpression="aql:'Go to (' + self.x + ' ; ' + self.y + ')'" tooltipExpression="aql:'Go to (' + self.x + ' ; ' + self.y + ')'" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="MN_Grab" label="Node Grab" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" semanticCandidatesExpression="aql:self.instructions" domainClass="mindstorms.Grab">
          <style xsi:type="style:DotDescription" labelSize="10" labelExpression="aql:'Grab'" tooltipExpression="aql:'Grab'" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="MN_Release" label="Node Release" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" semanticCandidatesExpression="aql:self.instructions" domainClass="mindstorms.Release">
          <style xsi:type="style:DotDescription" labelSize="10" labelExpression="aql:'Release'" tooltipExpression="aql:'Release'" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="MN_ReturnToBase" label="Node ReturnToBase" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" semanticCandidatesExpression="aql:self.instructions" domainClass="mindstorms.ReturnToBase">
          <style xsi:type="style:DotDescription" labelSize="10" labelExpression="aql:'Return to base'" tooltipExpression="aql:'Return to base'" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="MN_Rotate" label="Node Rotate" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDE_Rotate']" semanticCandidatesExpression="aql:self.instructions" domainClass="mindstorms.Rotate">
          <style xsi:type="style:DotDescription" labelSize="10" labelExpression="aql:'Rotate of ' + self.degrees + '째'" tooltipExpression="aql:'Rotate of ' + self.degrees + '째'" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='yellow']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.random = true">
            <style xsi:type="style:DotDescription" labelSize="10" labelExpression="aql:'Rotate randomly between 0 and 360째'" tooltipExpression="aql:'Rotate randomly between 0 and 360째'" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='yellow']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <nodeMappings name="MN_Travel" label="Node Travel" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDE_Travel']" semanticCandidatesExpression="aql:self.instructions" domainClass="mindstorms.Travel">
          <style xsi:type="style:DotDescription" labelSize="10" labelExpression="aql:'Travel : ' + self.cm + ' cm'" tooltipExpression="aql:'Travel : ' + self.cm + ' cm'" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="MC_EdgeInstruction" label="Edge Instruction" sourceMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Delay'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_GoBackward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_GoForward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_GoTo'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Grab'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Release'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_ReturnToBase'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Rotate'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Travel'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Arbitrator'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']" targetMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Delay'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_GoBackward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_GoForward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_GoTo'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Grab'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Release'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_ReturnToBase'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Rotate'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Travel'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Arbitrator'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MD_ReuseProcedure']" targetFinderExpression="service:getNextInstruction()">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="MC_Procedure" label="Container Procedure" detailDescriptions="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDC_NewIDD']" navigationDescriptions="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDN_IDD']" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDE_NamedElement']" semanticCandidatesExpression="aql:self.instructions" domainClass="mindstorms.Procedure" reusedNodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Delay'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoBackward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoForward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoTo'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Grab'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Release'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_ReturnToBase'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Rotate'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Travel']" reusedContainerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedIf'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedWhile']" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="10" tooltipExpression="feature:name" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <containerMappings name="MC_Arbitrator" label="Container Arbitrator" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" labelDirectEdit="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDE_NamedElement']" semanticCandidatesExpression="aql:self.instructions" domainClass="mindstorms.Arbitrator" childrenPresentation="List">
          <subNodeMappings name="MN_Behavior" label="Node Behavior" detailDescriptions="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDC_NewIDD']" navigationDescriptions="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDN_IDD']" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" semanticCandidatesExpression="aql:self.behaviors->concat(self.reuse)" domainClass="mindstorms.Behavior">
            <style xsi:type="style:SquareDescription" labelSize="10" labelAlignment="LEFT" tooltipExpression="feature:name" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="10" tooltipExpression="feature:name" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <containerMappings name="MC_While" label="Container While" detailDescriptions="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDC_NewIDD']" navigationDescriptions="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDN_IDD']" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" semanticCandidatesExpression="aql:self.instructions" domainClass="mindstorms.While" reusedNodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Delay'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoBackward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoForward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoTo'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Grab'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Release'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_ReturnToBase'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Rotate'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Travel']" reusedContainerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedIf'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedWhile']" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="10" tooltipExpression="feature:name" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_chocolate']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_chocolate']"/>
          </style>
        </containerMappings>
        <containerMappings name="MC_If" label="Container If" detailDescriptions="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDC_NewIDD']" navigationDescriptions="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MDN_IDD']" deletionDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MD_DeleteElement']" semanticCandidatesExpression="aql:self.instructions" domainClass="mindstorms.If" reusedNodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Delay'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoBackward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoForward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoTo'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Grab'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Release'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_ReturnToBase'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Rotate'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Travel']" reusedContainerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedIf'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedWhile']" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="10" tooltipExpression="feature:name" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_chocolate']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_chocolate']"/>
          </style>
        </containerMappings>
        <containerMappings name="MD_ReuseProcedure" label="Container Reuse Procedure" semanticCandidatesExpression="aql:self.instructions->filter(mindstorms::ReuseInstruction)->select(ins | ins.reuse.oclIsKindOf(mindstorms::Procedure))" domainClass="mindstorms.Instruction" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="10" labelExpression="aql:'Reuse ' + self.name" tooltipExpression="feature:name" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <toolSections name="MT_Create" label="Create">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="MCC_Procedure" label="Procedure" containerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Procedure']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Procedure" referenceName="instructions">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'New Procedure'"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="MD_GroupArbitrator">
            <tools xsi:type="tool:ContainerCreationDescription" name="MCC_Arbitrator" label="Arbitrator" containerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Arbitrator']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Arbitrator" referenceName="instructions">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'New Arbitrator'"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:NodeCreationDescription" name="MNC_Behavior" label="Behavior" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Arbitrator']/@subNodeMappings[name='MN_Behavior']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Behavior" referenceName="behaviors">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'New Behavior'"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:NodeCreationDescription" name="MNC_ReuseBehavior" label="Reuse existing Behavior" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Arbitrator']/@subNodeMappings[name='MN_Behavior']">
              <variable name="container">
                <subVariables xsi:type="tool_1:SelectModelElementVariable" name="elements" candidatesExpression="aql:self.eContainerOrSelf(mindstorms::Main).instructions->filter(mindstorms::Arbitrator).behaviors" multiple="true" message="Select the behaviors that will be part of the Arbitrator :"/>
              </variable>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:For" expression="var:elements">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="reuse" valueExpression="var:i"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
        </toolSections>
        <toolSections name="MS_Blocks" label="Blocks">
          <subSections name="MS_Actions" label="Actions">
            <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_Delay" label="Delay" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Delay'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Delay']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Delay" referenceName="instructions">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="ms" valueExpression="1000"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Delay" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="ms" valueExpression="1000"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_GoBackward" label="Go backward" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_GoBackward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoBackward']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoBackward" referenceName="instructions"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoBackward" referenceName="blocks"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_GoForward" label="Go forward" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_GoForward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoForward']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoForward" referenceName="instructions"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoForward" referenceName="blocks"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_GoTo" label="Go to" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_GoTo'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoTo']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoTo" referenceName="instructions">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="x" valueExpression="0"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="y" valueExpression="0"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoTo" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="x" valueExpression="0"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="y" valueExpression="0"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_Grab" label="Grab" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Grab'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Grab']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Grab" referenceName="instructions"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Grab" referenceName="blocks"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_Release" label="Release" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Release'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Release']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Release" referenceName="instructions"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Release" referenceName="blocks"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_ReturnToBase" label="Return to base" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_ReturnToBase'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_ReturnToBase']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.ReturnToBase" referenceName="instructions"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.ReturnToBase" referenceName="blocks"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_Rotate" label="Rotate" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Rotate'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Rotate']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Rotate" referenceName="instructions">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="degrees" valueExpression="90"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="random" valueExpression="false"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Rotate" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="degrees" valueExpression="90"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="random" valueExpression="false"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="MNC_Travel" label="Travel" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Travel'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Travel']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Travel" referenceName="instructions">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="0"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Travel" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="0"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
          </subSections>
          <subSections name="MS_Flow" label="Flow">
            <ownedTools xsi:type="tool:ContainerCreationDescription" name="MCC_While" label="While" containerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedWhile']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.While" referenceName="instructions">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'While'"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.While" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'While'"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:ContainerCreationDescription" name="MCC_If" label="If" containerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedIf']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.If" referenceName="instructions">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'If'"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.If" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'If'"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
          </subSections>
        </toolSections>
        <toolSections name="MS_Sensor" label="Sensor"/>
        <toolSections name="MT_Call" label="Call"/>
        <toolSections name="MT_Edit" label="Edit">
          <ownedTools xsi:type="tool:DirectEditLabel" name="MDE_NamedElement" label="Edit name of NamedElement">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:arg0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="MD_DeleteElement" label="Delete Element">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="MDE_Travel" label="Edit Travel">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="aql:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="MDE_Goto" label="Edit Goto">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.editGoto(arg0)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="MDE_Rotate" label="Edit Rotate">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.editRotate(arg0)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="MDE_Delay" label="Edit Delay">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.editDelay(arg0)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="MRE_BlockSource" label="Reconnect Block Source" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:otherEnd.target.reconnectBlockSource(target)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="MRE_BlockTarget" label="Reconnect Block Target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:otherEnd.target.reconnectBlockTarget(target)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="MDC_NewIDD" label="New Instruction Detailed Diagram" titleExpression="aql:self.name + ' Detailed Diagram'" diagramDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']">
            <initialOperation/>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramNavigationDescription" name="MDN_IDD" label="Navigate to Instruction Detailed Diagram" diagramDescription="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']">
            <containerViewVariable name="containerView"/>
            <containerVariable name="container"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="InstructionDetailedDiagram" label="Instruction Detailed Diagram" titleExpression="aql:self.name + ' Detailed Diagram'" domainClass="mindstorms.Instruction" preconditionExpression="aql:self.oclIsTypeOf(mindstorms::Procedure) or self.oclIsTypeOf(mindstorms::Behavior) or self.oclIsTypeOf(mindstorms::If) or self.oclIsTypeOf(mindstorms::While)" enablePopupBars="true">
      <metamodel href="http://www.obeo.fr/dsl/mindstorms/1.0.0#/"/>
      <defaultLayer name="InstructionDiagramDefaultLayer" label="Default">
        <nodeMappings xsi:type="description_1:NodeMappingImport" name="IDD_Delay" label="Detailed Delay" semanticCandidatesExpression="aql:self.blocks" importedMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Delay']"/>
        <nodeMappings xsi:type="description_1:NodeMappingImport" name="IDD_GoBackward" label="Detailed GoBackward" semanticCandidatesExpression="aql:self.blocks" domainClass="mindstorms.GoBackward" importedMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_GoBackward']"/>
        <nodeMappings xsi:type="description_1:NodeMappingImport" name="IDD_GoForward" label="Detailed GoForward" semanticCandidatesExpression="aql:self.blocks" domainClass="mindstorms.GoForward" importedMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_GoForward']"/>
        <nodeMappings xsi:type="description_1:NodeMappingImport" name="IDD_GoTo" label="Detailed GoTo" semanticCandidatesExpression="aql:self.blocks" importedMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_GoTo']"/>
        <nodeMappings xsi:type="description_1:NodeMappingImport" name="IDD_Grab" label="Detailed Grab" semanticCandidatesExpression="aql:self.blocks" domainClass="mindstorms.Grab" importedMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Grab']"/>
        <nodeMappings xsi:type="description_1:NodeMappingImport" name="IDD_Release" label="Detailed Release" semanticCandidatesExpression="aql:self.blocks" importedMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Release']"/>
        <nodeMappings xsi:type="description_1:NodeMappingImport" name="IDD_ReturnToBase" label="Detailed ReturnToBase" semanticCandidatesExpression="aql:self.blocks" importedMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_ReturnToBase']"/>
        <nodeMappings xsi:type="description_1:NodeMappingImport" name="IDD_Rotate" label="Detailed Rotate" semanticCandidatesExpression="aql:self.blocks" importedMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Rotate']"/>
        <nodeMappings xsi:type="description_1:NodeMappingImport" name="IDD_Travel" label="Detailed Travel" semanticCandidatesExpression="aql:self.blocks" domainClass="mindstorms.Travel" importedMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@nodeMappings[name='MN_Travel']"/>
        <edgeMappings name="IDD_EdgeBlock" label="Edge Block" sourceMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoBackward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoForward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoTo'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Grab'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Arbitrator']/@subNodeMappings[name='MN_Behavior'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Release'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_ReturnToBase'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Rotate'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Travel'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Delay'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedIf'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedWhile']" targetMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Delay'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoBackward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoForward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoTo'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Grab'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_Arbitrator']/@subNodeMappings[name='MN_Behavior'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Release'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_ReturnToBase'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Rotate'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Travel'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedIf'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedWhile']" targetFinderExpression="service:getNextBlock()" reconnections="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MRE_BlockSource'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='MRE_BlockTarget']">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="IDD_DetailedWhile" label="Detailed While" semanticCandidatesExpression="aql:self.blocks" domainClass="mindstorms.While" reusedNodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Delay'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoBackward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoForward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoTo'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Grab'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Release'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_ReturnToBase'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Rotate'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Travel']" reusedContainerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedIf'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedWhile']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_While']"/>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="IDD_DetailedIf" label="Detailed If" semanticCandidatesExpression="aql:self.blocks" reusedNodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Delay'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoBackward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoForward'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoTo'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Grab'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Release'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_ReturnToBase'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Rotate'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Travel']" reusedContainerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedIf'] //@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedWhile']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='MindstormsDiagram']/@defaultLayer/@containerMappings[name='MC_If']"/>
        <toolSections name="IS_Blocks" label="Blocks">
          <subSections name="IS_Actions" label="Actions">
            <ownedTools xsi:type="tool:NodeCreationDescription" name="INC_Delay" label="Delay" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Delay']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Delay" referenceName="instructions">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="ms" valueExpression="1000"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Delay" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="ms" valueExpression="1000"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="INC_GoBackward" label="Go backward" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoBackward']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoBackward" referenceName="instructions"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoBackward" referenceName="blocks"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="INC_GoForward" label="Go forward" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoForward']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoForward" referenceName="instructions"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoForward" referenceName="blocks"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="INC_GoTo" label="Go to" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_GoTo']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoTo" referenceName="instructions">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="x" valueExpression="0"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="y" valueExpression="0"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.GoTo" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="x" valueExpression="0"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="y" valueExpression="0"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="INC_Grab" label="Grab" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Grab']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Grab" referenceName="instructions"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Grab" referenceName="blocks"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="INC_Release" label="Release" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Release']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Release" referenceName="instructions"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Release" referenceName="blocks"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="INC_ReturnToBase" label="Return to base" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_ReturnToBase']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.ReturnToBase" referenceName="instructions"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.ReturnToBase" referenceName="blocks"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="INC_Rotate" label="Rotate" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Rotate']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Rotate" referenceName="instructions">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="degrees" valueExpression="90"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="random" valueExpression="false"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Rotate" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="degrees" valueExpression="90"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="random" valueExpression="false"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:NodeCreationDescription" name="INC_Travel" label="Travel" nodeMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@nodeMappings[name='IDD_Travel']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Travel" referenceName="instructions">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="0"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.Travel" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="cm" valueExpression="0"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
          </subSections>
          <subSections name="IS_Flow" label="Flow">
            <ownedTools xsi:type="tool:ContainerCreationDescription" name="ICC_While" label="While" containerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedWhile']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.While" referenceName="instructions">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'While'"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.While" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'While'"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:ContainerCreationDescription" name="ICC_If" label="If" containerMappings="//@ownedViewpoints[name='MindstormsViewpoint']/@ownedRepresentations[name='InstructionDetailedDiagram']/@defaultLayer/@containerMappings[name='IDD_DetailedIf']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Main)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.If" referenceName="instructions">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'If'"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mindstorms::Instruction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mindstorms.If" referenceName="blocks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'If'"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
          </subSections>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="fr.obeo.dsl.mindstorms.design.services.EdgeServices"/>
    <ownedJavaExtensions qualifiedClassName="fr.obeo.dsl.mindstorms.design.services.EditServices"/>
  </ownedViewpoints>
  <userColorsPalettes name="MindstormsColorsPalette">
    <entries xsi:type="description:UserFixedColor" red="196" green="226" blue="219" name="Main Green"/>
  </userColorsPalettes>
</description:Group>
